#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <300>;
            require-prior-idle-ms = <300>;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        dshift_caps_word: dshift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "DSHIFT_CAPS_WORD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        spl: spl {
            compatible = "zmk,behavior-hold-tap";
            label = "SPL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 29>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB                   &kp Q               &kp W           &kp E           &kp R             &kp T            &kp Y         &kp U              &kp I            &kp O            &kp P                &kp BACKSPACE
&mt RIGHT_CONTROL ESCAPE  &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &kp G            &kp H         &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RCTRL SEMICOLON  &kp SQT
&dshift_caps_word         &kp Z               &kp X           &kp C           &kp V             &kp B            &kp N         &kp M              &kp COMMA        &kp PERIOD       &kp SLASH            &kp RIGHT_SHIFT
                                                              &mo 3           &spl 2 BACKSPACE  &spl 2 DELETE    &spl 4 ENTER  &spl 5 SPACE       &spl 1 SPACE
            >;
        };

        Fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &trans             &trans           &trans           &trans               &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &trans  &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RCTRL SEMICOLON  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &trans  &trans             &trans           &trans           &trans               &trans
                         &trans  &trans  &trans             &trans  &trans             &trans
            >;
        };

        NAV {
            bindings = <
&browsertab  &trans              &trans          &trans          &trans            &trans    &kp C_AC_REDO   &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans       &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &trans    &kp LEFT_ARROW  &kp DOWN        &kp UP         &kp RIGHT     &kp CAPSLOCK   &trans
&trans       &trans              &trans          &trans          &trans            &trans    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP    &kp END       &kp INSERT     &trans
                                                 &trans          &trans            &trans    &trans          &trans          &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans              &trans          &trans          &trans            &trans            &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_SLEEP         &kp PRINTSCREEN  &trans
&trans  &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &studio_unlock    &kp C_REWIND  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_FAST_FORWARD  &kp C_PREV       &kp C_NEXT
&trans  &bootloader         &trans          &trans          &trans            &trans            &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3        &bt BT_CLR       &bt BT_CLR_ALL
                                            &trans          &trans            &trans            &kp C_STOP    &kp C_PLAY_PAUSE      &kp C_MUTE
            >;
        };

        Symbols {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans             &trans           &trans           &trans               &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RCTRL SEMICOLON  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE           &trans  &trans             &trans           &trans           &trans               &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &trans  &trans             &trans
            >;
        };

        Num {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7  &kp N8   &kp N9  &kp RIGHT_BRACKET       &trans  &trans             &trans           &trans           &trans               &trans
&trans  &kp SEMICOLON     &kp N4  &kp N5   &kp N6  &kp EQUAL               &trans  &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RCTRL SEMICOLON  &trans
&trans  &kp GRAVE         &kp N1  &kp N2   &kp N3  &kp NON_US_BACKSLASH    &trans  &trans             &trans           &trans           &trans               &trans
                                  &kp DOT  &kp N0  &kp MINUS               &trans  &trans             &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };
};
